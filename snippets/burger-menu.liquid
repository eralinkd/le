<div id="burger-overlay" class="closed"></div>

<div id="burger-menu" class="burger-menu closed">
    <h2><div id="burger-close" class="close"><</div>MENU</h2>

    <localization-form>
        {% form 'localization' %}
            <div type="button" class="disclosure__button menu-container lang" aria-expanded="false" aria-controls="LanguageList">
                {{ localization.language.iso_code | capitalize }}

                    <ul id="LanguageList" role="list" class="disclosure__list dropdown lang">
                    {% for language in localization.available_languages %}
                    <li class="disclosure__item" tabindex="-1">
                        <a href="#"{% if language.iso_code == localization.language.iso_code %} aria-current="true"{% endif %} hreflang="{{ language.iso_code }}" lang="{{ language.iso_code }}" data-value="{{ language.iso_code }}">
                        {{ language.endonym_name | capitalize }}
                        </a>
                    </li>
                    {% endfor %}
                    </ul>

                <input type="hidden" name="language_code" value="{{ localization.language.iso_code }}">
            </div>
        {% endform %}
    </localization-form>

    <form id="search-form-burger" class="search-form" action="{{ routes.search_url }}">
        <input type="text"
        class="search-form-input"
          placeholder=""
          name="q"
          value=""
          autocomplete="off"
        >
        <input type="submit" value="">
        <input type="hidden" name="type" value="product" />

        <ul class="suggestions opened"></ul>
    </form>

    <ul class="nav">
        <li>
            <a href="{{linklists.header-menu.links[0].url}}">{{ 'header.menu.latest-drop' | t }}</a>
        </li>
        <li>
            <a href="{{linklists.header-menu.links[1].url}}">{{ 'header.menu.shop' | t }}</a>
        </li>
        <li class="menu-container exclusive">
            <a href="{{linklists.header-menu.links[2].url}}">{{ 'header.menu.exclusive' | t }}</a>
        </li>
        <li>
            <a href="{{linklists.header-menu.links[3].url}}">{{ 'header.menu.rework' | t }}</a>
        </li>

        <li><a href="{{ linklists.header-menu.links[4].url }}">Salé</a></li>
        <li><a href="{{linklists.header-menu.links[5].url}}">Archivè</a></li>
        <li><a href="{{linklists.footer.links[0].url}}">About us</a></li>

    </ul>

    <script>
        const burgerButton = document.querySelector('#burger-open');
        const burgerMenu = document.querySelector('#burger-menu');
        const burgerOverlay = document.querySelector('#burger-overlay');
        const burgerClose = document.querySelector('#burger-close');

        burgerButton.addEventListener("click", () => {
            burgerMenu.classList.toggle('closed');
            burgerOverlay.classList.toggle('closed');
        });

        burgerOverlay.addEventListener("click", () => {
            if (!burgerMenu.classList.contains('closed')) {
                burgerMenu.classList.add('closed');
                burgerOverlay.classList.add('closed');
            }
        });

        burgerClose.addEventListener("click", () => {
            if (!burgerMenu.classList.contains('closed')) {
                burgerMenu.classList.add('closed');
                burgerOverlay.classList.add('closed');
            }
        });

    </script>

    <script>
        const searchFormBurger = document.querySelector('#search-form-burger');

        searchFormBurger.addEventListener("submit", async (event) => {
            event.preventDefault();
            if (searchFormBurger.classList.contains("closed")) {
                searchFormBurger.classList.remove("closed");
                if (productSuggestionsBurger.length > 0) {
                    displaySuggestionsBurger(productSuggestionsBurger);
                }
            } 
            else {
                if (validateForm()){
                    event.target.submit();
                }
                else {
                    searchFormBurger.elements["q"].focus();
                }
            }

        });

        document.addEventListener("click", function(event) {
            var isClickInside = searchFormBurger.contains(event.target);
        
            if (!isClickInside && !searchFormBurger.classList.contains("closed")) {
                searchFormBurgerSuggestions.classList.remove("opened");
            }
        });
        

        function validateForm() {
            return searchFormBurger.elements["q"].value.length > 0;
        }
    </script>

    <script>
        let productSuggestionsBurger = [];
        const searchFormBurgerInput = document.querySelector('#search-form-burger .search-form-input');
        const searchFormBurgerSuggestions = document.querySelector('#search-form-burger .suggestions');

        searchFormBurgerInput.addEventListener("input", async (event) => {
            fetch(window.Shopify.routes.root + `search/suggest.json?q=${searchFormBurgerInput.value}&resources[type]=product&resources[options][unavailable_products]=hide&resources[options][fields]=title,product_type`)
            .then((response) => response.json())
            .then((suggestions) => {
                console.log(suggestions);
                productSuggestionsBurger = suggestions.resources.results.products.filter(product => {
                    return parseFloat(product.price) > 0;
                });
                displaySuggestionsBurger(productSuggestionsBurger);
            })
            
            .catch((error) => {
                productSuggestionsBurger = [];
                displaySuggestionsBurger(productSuggestionsBurger);
            });
        });

        function displaySuggestionsBurger(products) {
            searchFormBurgerSuggestions.innerHTML = '';
            for (let i = 0; i < 3; i++) {
                const a = document.createElement('a');
                a.href=products[i].url;
                a.innerHTML = `<img src="${products[i].image}" alt="${products[i].title}">
                <p>${products[i].title}</p>`
                searchFormBurgerSuggestions.appendChild(a);
            }
            searchFormBurgerSuggestions.classList.add("opened");
        }
    </script>

</div>